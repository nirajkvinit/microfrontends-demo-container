{"version":3,"sources":["ui/Button.js","ui/Divider.js","ui/ErrorMessage.js","ui/Heading.js","ui/HeadingSmall.js","ui/TextInput.js","ui/HoveringButton.js","ui/MaxWidthContentSection.js","ui/FullWidthContentSection.js","ui/IFrameContainer.js","ui/LessonPresentationContainer.js","ui/LessonPresentationHeader.js","app/App.js","index.js"],"names":["ButtonBase","styled","button","TransparentButton","ShadowButton","Button","type","children","rest","Divider","hr","ErrorMessage","div","Heading","h1","HeadingSmall","h3","StyledInput","input","TextInput","PageBackground","ContentSection","FullWidthContentSection","Wrapper","IFrameContent","iframe","CenteredHeadingSmall","IFrameContainer","id","src","onLoad","LessonPresentationContainer","LessonPresentationHeader","App","useState","inputValue","setInputValue","lessonPresentationUrl","setLessonPresentationUrl","errorMessageVal","setErrorMessageVal","setTeacherLoading","setStudentLoading","placeholder","style","flex","marginRight","value","onChange","e","target","onClick","validatorOption","includes","require_tld","isUrl","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAGMA,EAAaC,IAAOC,OAAV,sSAiBVC,EAAoBF,YAAOD,EAAPC,CAAH,8EAKjBG,EAAeH,YAAOD,EAAPC,CAAH,6DAILI,EAAS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAaC,EAAW,mCACrD,OAAQF,GACN,IAAK,cACH,OAAO,cAACH,EAAD,2BAAuBK,GAAvB,aAA8BD,KACvC,IAAK,SACH,OAAO,cAACH,EAAD,2BAAkBI,GAAlB,aAAyBD,KAClC,IAAK,iBACH,OAAO,cAACP,EAAD,2BAAgBQ,GAAhB,sCACT,QACE,OAAO,cAACR,EAAD,2BAAgBQ,GAAhB,aAAuBD,OCpCvBE,EAAUR,IAAOS,GAAV,8ECAPC,EAAeV,IAAOW,IAAV,0JCAZC,EAAUZ,IAAOa,GAAV,mHCAPC,EAAed,IAAOe,GAAV,mJCCnBC,GCCehB,YAAOI,EAAPJ,CAAH,0ICDKA,IAAOW,IAAV,mJAUGX,IAAOW,IAAV,kKFVAX,IAAOiB,MAAV,oOAcJC,EAAY,SAAC,GAAiB,IAAZX,EAAW,oBACxC,OAAO,cAACS,EAAD,aAAaX,KAAK,QAAWE,KGfhCY,EAAiBnB,IAAOW,IAAV,mJAUdS,EAAiBpB,IAAOW,IAAV,gKASPU,EAA0B,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACxC,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UAAiBA,OCtBjBgB,EAAUtB,IAAOW,IAAV,+HAQPY,EAAgBvB,IAAOwB,OAAV,mLAYbC,EAAuBzB,YAAOc,EAAPd,CAAH,sEAKb0B,EAAkB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,IAAKvB,EAAmB,EAAnBA,KAAMwB,EAAa,EAAbA,OAC/C,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAuBpB,IACvB,cAACkB,EAAD,CAAeI,GAAIA,EAAIC,IAAKA,EAAKC,OAAQA,QC9BlCC,EAA8B9B,IAAOW,IAAV,0ECA3BoB,EAA2B/B,IAAOW,IAAV,iKCcxBqB,EAAM,WAAO,IAAD,EACaC,mBAAS,IADtB,mBAChBC,EADgB,KACJC,EADI,OAEmCF,mBAAS,IAF5C,mBAEhBG,EAFgB,KAEOC,EAFP,OAGuBJ,mBAAS,MAHhC,mBAGhBK,EAHgB,KAGCC,EAHD,OAIqBN,oBAAS,GAJ9B,mBAIAO,GAJA,aAKqBP,oBAAS,GAL9B,mBAKAQ,GALA,WAsBvB,OACE,eAAC,EAAD,WACE,cAAC7B,EAAD,mCACA,eAACmB,EAAD,WACE,cAAC,EAAD,CACEW,YAAY,0BACZC,MAAO,CAAEC,KAAM,EAAGC,YAAa,OAC/BC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAca,EAAEC,OAAOH,UAE1C,cAAC,EAAD,CAAQI,QAzBkB,WAC9B,IAAMC,EAAkBjB,EAAWkB,SAAS,aACxC,CAAEC,aAAa,GACf,GACCC,IAAMpB,EAAYiB,IAIvBX,GAAkB,GAClBC,GAAkB,GAElBJ,EAAyBH,GACzBK,EAAmB,OAPjBA,EAAmB,iDAoByBI,MAAO,CAAEC,KAAM,GAAzD,kCAIDN,EAAkB,cAAC5B,EAAD,UAAe4B,IAAkC,KACpE,cAAC9B,EAAD,IAEC4B,EACC,eAACN,EAAD,WACE,cAAC,EAAD,CACEH,GAAG,gBACHC,IAAKQ,EACL/B,KAAK,UACLwB,OAAQ,kBAAMW,GAAkB,MAElC,cAAC,EAAD,CACEb,GAAG,gBACHC,IAAKQ,EACL/B,KAAK,UACLwB,OAAQ,kBAAMY,GAAkB,SAIpC,cAACX,EAAD,UACE,cAAChB,EAAD,yDCvDVyC,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05350148.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonBase = styled.button`\n  background-color: #a4d22a;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  outline: none;\n  padding: 16px;\n  text-transform: uppercase;\n\n  :disabled {\n    background-color: #ccc;\n  }\n`;\n\nconst TransparentButton = styled(ButtonBase)`\n  background-color: transparent;\n  color: #aaa;\n`;\n\nconst ShadowButton = styled(ButtonBase)`\n  box-shadow: 0px 5px 5px #888;\n`;\n\nexport const Button = ({ type, children, ...rest }) => {\n  switch (type) {\n    case 'transparent':\n      return <TransparentButton {...rest}>{children}</TransparentButton>;\n    case 'shadow':\n      return <ShadowButton {...rest}>{children}</ShadowButton>;\n    case 'google-sign-in':\n      return <ButtonBase {...rest}>Sign in with Google</ButtonBase>;\n    default:\n      return <ButtonBase {...rest}>{children}</ButtonBase>;\n  }\n};\n\nexport const SignInWithGoogleButton = ({ children, ...rest }) =>\n  Button('google-sign-in', children, ...rest);\n","import styled from 'styled-components';\n\nexport const Divider = styled.hr`\n  border-top: 1px solid #eee;\n  margin: 0 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.div`\n  background-color: #ee7777;\n  border-radius: 8px;\n  color: #fff;\n  padding: 16px;\n  text-align: center;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  font-weight: bold;\n  margin-top: 0px;\n  padding-top: 16px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const HeadingSmall = styled.h3`\n  font-weight: bold;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  padding: 16px 0;\n  border-bottom: 1px solid #eee;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  box-sizing: border-box;\n  font-size: 16px;\n  font-weight: bold;\n  outline: none;\n  padding: 16px;\n\n  ::placeholder {\n    color: #ddd;\n  }\n`;\n\nexport const TextInput = ({ ...rest }) => {\n  return <StyledInput type=\"text\" {...rest} />;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from './Button';\n\nconst StyledButton = styled(Button)`\n  bottom: 32px;\n  box-shadow: 0px 10px 10px #888;\n  left: 50%;\n  margin-left: -100px;\n  position: fixed;\n`;\n\nexport const HoveringButton = ({ onClick, children }) => (\n  <StyledButton onClick={onClick}>{children}</StyledButton>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst PageBackground = styled.div`\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: auto;\n`;\n\nconst ContentSection = styled.div`\n  background-color: #fff;\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: 800px;\n  min-height: 100vh;\n  padding: 16px;\n`;\n\nexport const MaxWidthContentSection = ({ children }) => {\n  return (\n    <PageBackground>\n      <ContentSection>{children}</ContentSection>\n    </PageBackground>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst PageBackground = styled.div`\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: auto;\n`;\n\nconst ContentSection = styled.div`\n  background-color: #fff;\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: 90%;\n  min-height: 100vh;\n  padding: 16px;\n`;\n\nexport const FullWidthContentSection = ({ children }) => {\n  return (\n    <PageBackground>\n      <ContentSection>{children}</ContentSection>\n    </PageBackground>\n  );\n};\n","import styled from 'styled-components';\nimport { HeadingSmall } from './HeadingSmall';\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 10px;\n  height: 70vh;\n`;\n\nconst IFrameContent = styled.iframe`\n  background-color: #eee;\n  position: relative;\n  top: 2%;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n`;\n\nconst CenteredHeadingSmall = styled(HeadingSmall)`\n  text-align: center;\n  padding: 5px 0;\n`;\n\nexport const IFrameContainer = ({ id, src, type, onLoad }) => {\n  return (\n    <Wrapper>\n      <CenteredHeadingSmall>{type}</CenteredHeadingSmall>\n      <IFrameContent id={id} src={src} onLoad={onLoad}></IFrameContent>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LessonPresentationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const LessonPresentationHeader = styled.div`\n  align-content: center;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 16px;\n`;\n","import React, { useState } from 'react';\nimport isUrl from 'validator/lib/isURL';\nimport Spinner from 'react-spinkit';\nimport {\n  Button,\n  Divider,\n  Heading,\n  ErrorMessage,\n  TextInput,\n  HeadingSmall,\n  FullWidthContentSection,\n  IFrameContainer,\n  LessonPresentationHeader,\n  LessonPresentationContainer,\n} from '../ui';\n\nexport const App = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [lessonPresentationUrl, setLessonPresentationUrl] = useState('');\n  const [errorMessageVal, setErrorMessageVal] = useState(null);\n  const [teacherLoading, setTeacherLoading] = useState(false);\n  const [studentLoading, setStudentLoading] = useState(false);\n\n  const onClickLoadPresentation = () => {\n    const validatorOption = inputValue.includes('localhost')\n      ? { require_tld: false }\n      : {};\n    if (!isUrl(inputValue, validatorOption)) {\n      setErrorMessageVal('Please input correct lesson presentation URL');\n      return;\n    }\n    setTeacherLoading(true);\n    setStudentLoading(true);\n\n    setLessonPresentationUrl(inputValue);\n    setErrorMessageVal(null);\n  };\n\n  return (\n    <FullWidthContentSection>\n      <Heading>Micro-Frontends Demo</Heading>\n      <LessonPresentationHeader>\n        <TextInput\n          placeholder=\"Lesson Presentation URL\"\n          style={{ flex: 5, marginRight: '8px' }}\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <Button onClick={onClickLoadPresentation} style={{ flex: 2 }}>\n          Load Presentation\n        </Button>\n      </LessonPresentationHeader>\n      {errorMessageVal ? <ErrorMessage>{errorMessageVal}</ErrorMessage> : null}\n      <Divider />\n\n      {lessonPresentationUrl ? (\n        <LessonPresentationContainer>\n          <IFrameContainer\n            id=\"teacheriframe\"\n            src={lessonPresentationUrl}\n            type=\"Teacher\"\n            onLoad={() => setTeacherLoading(false)}\n          ></IFrameContainer>\n          <IFrameContainer\n            id=\"studentiframe\"\n            src={lessonPresentationUrl}\n            type=\"Student\"\n            onLoad={() => setStudentLoading(false)}\n          ></IFrameContainer>\n        </LessonPresentationContainer>\n      ) : (\n        <LessonPresentationContainer>\n          <HeadingSmall>Please input lesson presentation URL</HeadingSmall>\n        </LessonPresentationContainer>\n      )}\n    </FullWidthContentSection>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport './index.css';\nimport { App } from './app';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyBFumNuinkzsQtVtbg2ZEZbgUIQo_Bv7AE',\n  authDomain: 'microfrontends-1bd03.firebaseapp.com',\n  projectId: 'microfrontends-1bd03',\n  storageBucket: 'microfrontends-1bd03.appspot.com',\n  messagingSenderId: '205696778254',\n  appId: '1:205696778254:web:628bfcc791e02b9e01bc5f',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}